---
import { availableTopics } from "../../../../types/src";
import Layout from "../../layouts/Layout.astro";
import TopHeader from "../../components/TopHeader.astro";
import TopicTree from "../../components/TopicTree.astro";
import SpecButtons from "../../components/SpecButtons.astro";

import { basename } from "node:path";
import { createTopicTree } from "../../file-utils";

export function getStaticPaths() {
  return availableTopics.map((topic) => {
    return { params: { topic: topic } };
  });
}

const { topic } = Astro.params;

const data = await Astro.glob("../../../../../specifications/**/*.md");
if (!topic) {
  return Astro.redirect("/404", 404);
}

const filename = `${topic}/${basename(topic)}.md`;
const page = data.find((i) => i.file.includes(filename));

if (!page) {
  return Astro.redirect("/404", 404);
}
const tree = createTopicTree(
  data.map((d) => d.file).filter((i) => !i.includes("README.md"))
);
---

<Layout title="HWB Standard">
  <main class="max-w-prose m-auto">
    <TopHeader isSubpage />
    <SpecButtons />

    <div class="prose my-16">
      <page.Content />
    </div>

    <hr />

    <aside>
      <h2>Topic specifications</h2>
      <TopicTree topicTree={tree} topic={topic} />
    </aside>
  </main>
</Layout>
